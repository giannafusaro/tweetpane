// Generated by CoffeeScript 1.10.0
(function() {
  var MyTwitter, Tweet, jsdom, twitter;

  twitter = require('twitter');

  jsdom = require('jsdom');

  Tweet = require('/Users/giannafusaro/Dev/tweetpane/photon/dist/template-app/js/tweet');

  MyTwitter = (function() {
    function MyTwitter() {
      var access_token, access_token_secret, consumer_key, consumer_secret, timeline;
      consumer_key = process.env['TWITTER_CONSUMER_KEY'];
      consumer_secret = process.env['TWITTER_CONSUMER_SECRET'];
      access_token = process.env['TWITTER_ACCESS_TOKEN'];
      access_token_secret = process.env['TWITTER_ACCESS_SECRET'];
      timeline = [];
      this.client = new twitter({
        consumer_key: consumer_key,
        consumer_secret: consumer_secret,
        access_token_key: access_token,
        access_token_secret: access_token_secret
      });
    }

    MyTwitter.prototype.getTimeline = function() {
      var params;
      params = {
        include_entities: true,
        contributor_details: true
      };
      return this.client.get('statuses/home_timeline', params, function(error, tweets, response) {
        var compact, i, key, len, li, ref, ref1, ref2, ref3, ref4, results, tweet, value;
        if (!error) {
          console.log(tweets, 'tweets');
          results = [];
          for (i = 0, len = tweets.length; i < len; i++) {
            tweet = tweets[i];
            li = document.createElement('li');
            compact = '';
            ref4 = new Tweet({
              date: tweet.created_at,
              display_url: (ref = tweet.entities.urls) != null ? (ref1 = ref[0]) != null ? ref1.display_url : void 0 : void 0,
              media_url: (ref2 = tweet.extended_entities) != null ? (ref3 = ref2.media[0]) != null ? ref3.media_url_https : void 0 : void 0,
              text: tweet.text,
              location: tweet.user.location,
              name: tweet.user.name,
              bg_img: tweet.user.profile_background_image_url_https,
              thumbnail: tweet.user.profile_image_url_https,
              screen_name: tweet.user.screen_name
            }).injectHTML();
            for (key in ref4) {
              value = ref4[key];
              compact += value;
            }
            li.innerHTML = compact;
            $(li).addClass('list-group-item');
            results.push($('ul.tweet-list').append(li));
          }
          return results;
        } else {
          return console.log("errors:", error);
        }
      });
    };

    MyTwitter.prototype.startStream = function() {
      return this.client.stream('user', {
        "with": 'followings',
        delimited: 'true',
        language: 'en'
      }, function(stream) {
        stream.on('data', function(tweet) {
          return console.log(tweet.text);
        });
        return stream.on('error', function(error) {
          throw error;
        });
      });
    };

    return MyTwitter;

  })();

  module.exports = MyTwitter;

}).call(this);

//# sourceMappingURL=twitterAPI.js.map
